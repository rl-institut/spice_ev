# call simulate script with --help option to see all options
# call simulate script with --config option to use this file:
# python simulate.py --config examples/simulate.cfg

# set input file
input = examples/bus_scenario.json

# set strategy with options
strategy = balanced
# possible strategies: greedy, balanced, balanced_market, schedule, flex_window
# options: LOAD_STRAT (sub-strategy for some strategies), CONCURRENCY [-], HORIZON [h], PRICE_THRESHOLD [â‚¬]
strategy_option = [["LOAD_STRAT", "balanced"], ["CONCURRENCY", 1.0], ["HORIZON", 24], ["PRICE_THRESHOLD", 1], ["DISCHARGE_LIMIT", 0.5], ["V2G_POWER_FACTOR", 0.5], ["ELECTRIFIED_STATIONS_FILE", "examples/electrified_stations.json"], ["ALLOW_NEGATIVE_SOC", true]]

# show plots after simulation
visual = true

# show estimated remaining time instead of progress bar
# WARNING: slows down fast computations
eta = true

# give margin for desired SoC [0.0 - 1.0]
# margin = 0.1 -> simulation will not abort if vehicles reach at least 90% of the desired SoC before leaving.
# margin = 1.0 -> simulation continues with every positive SoC value, but may fail if trips can not be completed.
margin = 0.99

# generate output files with simulation data
save_timeseries = examples/simulation.csv
save_results = examples/simulation.json
